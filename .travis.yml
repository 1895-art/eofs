language: python

python:
    - "2.7"
    - "3.3"
    - "3.4"
    - "3.5"

sudo: false

env:
    - TEST_MODE=complete
    - TEST_MODE=basic

matrix:
    exclude:
        - python: "3.3"
          env: TEST_MODE=complete
        - python: "3.5"
          env: TEST_MODE=complete

install:
    # Install Miniconda so we can use it to manage dependencies:
    - if [[ "$TRAVIS_PYTHON_VERSION" == 2* ]]; then
        wget http://repo.continuum.io/miniconda/Miniconda-3.4.2-Linux-x86_64.sh -O miniconda.sh;
      else
        wget http://repo.continuum.io/miniconda/Miniconda3-3.4.2-Linux-x86_64.sh -O miniconda.sh;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda config --add channels ajdawson
    - conda update conda
    - conda info -a
    # Create a conda environment with the base dependencies:
    - conda create -n test-environment python=$TRAVIS_PYTHON_VERSION
    - source activate test-environment
    # In complete testing mode, install cdat-lite and iris for Python 2 and
    # iris for Python 3:
    - if [[ "$TRAVIS_PYTHON_VERSION" == 2* ]] && [[ "$TEST_MODE" == "complete" ]]; then
        conda config --add channels SciTools;
        conda install setuptools nose coverage pep8 numpy cdat-lite iris xarray;
      elif [[ "$TRAVIS_PYTHON_VERSION" == 3* ]] && [[ "$TEST_MODE" == "complete" ]]; then
        conda config --add channels SciTools;
        conda install setuptools nose coverage pep8 numpy iris xarray;
      else
        conda install setuptools nose coverage pep8 numpy;
      fi
    # Install the package:
    - python setup.py install

script:
    # Create an isolated test directory to make sure we test against the
    # installed package rather than the source:
    - mkdir ../test_directory
    - cd ../test_directory
    - nosetests eofs --verbosity=2 --with-coverage --cover-package=eofs

notifications:
    email: false
